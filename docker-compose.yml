version: '3.8'


services:
  discovery:
    build:
      context: ./discovery
      dockerfile: Dockerfile
    container_name: discovery-service
    environment:
      - EUREKA_URI=http://192.168.0.138:8761/eureka
      - CONFIG_SERVER_URL=http://192.168.0.138:8888
    ports:
      - "8761:8761"
    networks:
      - com-roconmachine-io
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config
    ports:
      - "8888:8888"
    networks:
      - com-roconmachine-io
  gatekeeper: 
    build:
      context: ./gatekeeper
      dockerfile: Dockerfile
    container_name: gatekeeper-service
    environment:
      - EUREKA_URI=http://192.168.0.138:8761/eureka
      - CONFIG_SERVER_URL=http://192.168.0.138:8888
      - OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI=http://192.168.0.138:9090/realms/microservice-io
    depends_on:
      - discovery
      - config-server
    ports:
      - "8080:8080"
    networks:
      - com-roconmachine-io
  accounts:
    build:
      context: ./accounts
      dockerfile: Dockerfile
    container_name: accounts-service
    ports:
      - 8090:8090
    environment:
      - CONFIG_SERVER_URL=http://192.168.0.138:8888
      - EUREKA_URI=http://192.168.0.138:8761/eureka
      - ACCOUNT_SERVER_MONGO_HOST=192.168.0.138
      - ACCOUNT_SERVER_MONGO_PORT:27017
      - ACCOUNT_SERVER_MONGO_DB:accounts

    depends_on:
      - config-server
      - discovery
      - mongodb
    networks:
      - com-roconmachine-io
  mongodb:
    image: mongo:5.0.6-focal
    container_name: mongodb

    # environment:
    #  - MONGO_INITDB_ROOT_USERNAME=root
    #  - MONGO_INITDB_ROOT_PASSWORD=pass12345
    volumes:
      #local dir/files: docker dir/files
      - $HOME/uzrnem/database/mongo_db:/data/db
      - $HOME/uzrnem/database/backup:/backup
    ports:
      - 27017:27017
    networks:
      - com-roconmachine-io
    restart: unless-stopped
  user-info:
    build:
      context: ./user-info
      dockerfile: Dockerfile
    environment:
      - KC_CLIENT_ID=api-app
      - KC_CLIENT_SECRET=3ePBAjSJkWWKP0HjGpezJjWtK2M9jkSq
      - KC_GRANT_TYPE=client_credentials
      - KC_REALM=microservice-io
      - KC_SERVER_URL=http://192.168.0.138:9090
      - EUREKA_URI=http://192.168.0.138:8761/eureka
      - CONFIG_SERVER_URL=http://192.168.0.138:8888
    ports:
      - 8081:8081
    depends_on:
      - config-server
      - discovery
    networks:
      - com-roconmachine-io
  postgresql:
    container_name: ms_pg_sql
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: identity_service
    volumes:
      - $HOME/uzrnem/database/postgresql/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - com-roconmachine-io
    restart: unless-stopped

  keycloak:
    container_name: keycloak-server
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - 9090:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: 192.168.0.138
#      KC_HOSTNAME_PORT: 8080
#      KC_HOSTNAME_STRICT_BACKCHANNEL: false
#      KC_HTTP_ENABLED: true
#      KC_HOSTNAME_STRICT_HTTPS: false
#      KC_HEALTH_ENABLED: true
#      KC_DB: postgresql
#      KC_DB_URL: jdbc:postgresql://postgres/keycloack
#      KC_DB_USERNAME: postgres
#      KC_DB_PASSWORD: postgres
    networks:
      - com-roconmachine-io
    command:
      - "start-dev"
networks:
  com-roconmachine-io:
    driver: bridge